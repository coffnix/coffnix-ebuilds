diff --git a/hw/xfree86/common/xf86Opt.h b/hw/xfree86/common/xf86Opt.h
index 3be2a0fc7e127c29c8be6ec7a2509daef08c2f38..3046fbd417c526813a8dce0900f85f2445d0d4ba 100644
--- a/hw/xfree86/common/xf86Opt.h
+++ b/hw/xfree86/common/xf86Opt.h
@@ -41,7 +41,7 @@ typedef union {
     unsigned long num;
     const char *str;
     double realnum;
-    Bool bool;
+    Bool boolean;
     OptFrequency freq;
 } ValueUnion;
 
diff --git a/hw/xfree86/common/xf86Option.c b/hw/xfree86/common/xf86Option.c
index 06973bca307b88d5e1e707a4634d70ca09690d87..ca538cc576c23a2ba71c0e2a10df63b756fd1e8c 100644
--- a/hw/xfree86/common/xf86Option.c
+++ b/hw/xfree86/common/xf86Option.c
@@ -213,7 +213,7 @@ LookupBoolOption(XF86OptionPtr optlist, const char *name, int deflt,
     o.name = name;
     o.type = OPTV_BOOLEAN;
     if (ParseOptionValue(-1, optlist, &o, markUsed))
-        deflt = o.value.bool;
+        deflt = o.value.boolean;
     return deflt;
 }
 
@@ -474,7 +474,7 @@ xf86ShowUnusedOptions(int scrnIndex, XF86OptionPtr opt)
 static Bool
 GetBoolValue(OptionInfoPtr p, const char *s)
 {
-    return xf86getBoolValue(&p->value.bool, s);
+    return xf86getBoolValue(&p->value.boolean, s);
 }
 
 static Bool
@@ -678,7 +678,7 @@ ParseOptionValue(int scrnIndex, XF86OptionPtr options, OptionInfoPtr p,
             if (markUsed)
                 xf86MarkOptionUsedByName(options, newn);
             if (GetBoolValue(&opt, s)) {
-                p->value.bool = !opt.value.bool;
+                p->value.boolean = !opt.value.boolean;
                 p->found = TRUE;
             }
             else {
@@ -869,7 +869,7 @@ xf86GetOptValBool(const OptionInfoRec * table, int token, Bool *value)
 
     p = xf86TokenToOptinfo(table, token);
     if (p && p->found) {
-        *value = p->value.bool;
+        *value = p->value.boolean;
         return TRUE;
     }
     else
@@ -883,7 +883,7 @@ xf86ReturnOptValBool(const OptionInfoRec * table, int token, Bool def)
 
     p = xf86TokenToOptinfo(table, token);
     if (p && p->found) {
-        return p->value.bool;
+        return p->value.boolean;
     }
     else
         return def;
diff --git a/hw/xwin/winconfig.c b/hw/xwin/winconfig.c
index 31894d2fb0f65d45c7cefdfe487fe6f1af0edb15..646d690062941ae2abe4b407cf6ec0331a293b44 100644
--- a/hw/xwin/winconfig.c
+++ b/hw/xwin/winconfig.c
@@ -623,7 +623,7 @@ winSetBoolOption(void *optlist, const char *name, int deflt)
     o.name = name;
     o.type = OPTV_BOOLEAN;
     if (ParseOptionValue(-1, optlist, &o))
-        deflt = o.value.bool;
+        deflt = o.value.boolean;
     return deflt;
 }
 
@@ -918,7 +918,7 @@ ParseOptionValue(int scrnIndex, void *options, OptionInfoPtr p)
         }
         if ((s = winFindOptionValue(options, newn)) != NULL) {
             if (GetBoolValue(&opt, s)) {
-                p->value.bool = !opt.value.bool;
+                p->value.boolean = !opt.value.boolean;
                 p->found = TRUE;
             }
             else {
@@ -968,25 +968,25 @@ static Bool
 GetBoolValue(OptionInfoPtr p, const char *s)
 {
     if (*s == 0) {
-        p->value.bool = TRUE;
+        p->value.boolean = TRUE;
     }
     else {
         if (winNameCompare(s, "1") == 0)
-            p->value.bool = TRUE;
+            p->value.boolean = TRUE;
         else if (winNameCompare(s, "on") == 0)
-            p->value.bool = TRUE;
+            p->value.boolean = TRUE;
         else if (winNameCompare(s, "true") == 0)
-            p->value.bool = TRUE;
+            p->value.boolean = TRUE;
         else if (winNameCompare(s, "yes") == 0)
-            p->value.bool = TRUE;
+            p->value.boolean = TRUE;
         else if (winNameCompare(s, "0") == 0)
-            p->value.bool = FALSE;
+            p->value.boolean = FALSE;
         else if (winNameCompare(s, "off") == 0)
-            p->value.bool = FALSE;
+            p->value.boolean = FALSE;
         else if (winNameCompare(s, "false") == 0)
-            p->value.bool = FALSE;
+            p->value.boolean = FALSE;
         else if (winNameCompare(s, "no") == 0)
-            p->value.bool = FALSE;
+            p->value.boolean = FALSE;
     }
     return TRUE;
 }
diff --git a/hw/xwin/winconfig.h b/hw/xwin/winconfig.h
index f079368c7cac6238f063591f3440d8d4fa51f48c..bd1f596509ad4d6f59b3bd336bc04436f856223b 100644
--- a/hw/xwin/winconfig.h
+++ b/hw/xwin/winconfig.h
@@ -199,7 +199,7 @@ typedef union {
     unsigned long num;
     char *str;
     double realnum;
-    Bool bool;
+    Bool boolean;
     OptFrequency freq;
 } ValueUnion;
 
